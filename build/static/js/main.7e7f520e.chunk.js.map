{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","services_persons","axios","get","then","res","data","newPerson","post","id","updatedPerson","put","concat","delete","Filter","_ref","filter","handlerer","react_default","a","createElement","value","onChange","PersonForm","_ref2","addPerson","newName","nameHandlerer","newNumber","numberHandlerer","onSubmit","type","Persons","_ref3","persons","handleClick","map","p","key","name","number","onClick","Notification","_ref4","message","className","ErrorNotification","_ref5","App","_useState","useState","_useState2","Object","slicedToArray","notificationMessage","setNotificationMessage","_useState3","_useState4","errorMessage","setErrorMessage","_useState5","_useState6","setPersons","_useState7","_useState8","setNewName","_useState9","_useState10","setNewNumber","_useState11","_useState12","setFilter","personsToShow","toLowerCase","includes","useEffect","personService","initialPersons","showNotification","setTimeout","showErrorMessage","App_ErrorNotification","App_Notification","App_Filter","event","target","App_PersonForm","preventDefault","existingPerson","find","undefined","window","confirm","objectSpread","returnedPerson","catch","error","alert","App_Persons","returneddata","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7e7f520e.chunk.js","sourcesContent":["import axios from 'axios'\n//const baseUrl = 'http://localhost:3001/persons'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const req = axios.get(baseUrl)\n  return req.then(res => res.data)\n}\n\nconst create = newPerson => {\n  const req = axios.post(baseUrl, newPerson)\n  return req.then(res => res.data)\n}\n\nconst update = (id, updatedPerson) => {\n  const req = axios.put(`${baseUrl}/${id}`, updatedPerson)\n  return req.then(res => res.data)\n}\n\nconst remove = (id) => {\n  const req = axios.delete(`${baseUrl}/${id}`)\n  return req.then(res => res.data)\n}\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react';\nimport personService from './services/persons'\n//import './index.css'\nconst Filter = ({filter, handlerer}) => (\n  <div>\n    rajaa näytettäviä <input \n                        value={filter}\n                        onChange={handlerer}\n                      />\n  </div>\n)\n\nconst PersonForm = ({addPerson, newName, nameHandlerer, newNumber, numberHandlerer}) => (\n  <form onSubmit={addPerson}>\n        <div>\n          nimi: <input \n                  value={newName}\n                  onChange={nameHandlerer}\n                />\n        </div>\n        <div>\n          numero: <input \n                    value={newNumber}\n                    onChange={numberHandlerer}\n                  />\n        </div>\n        <div>\n          <button type=\"submit\">lisää</button>\n        </div>\n      </form>\n)\n\nconst Persons = ({persons, handleClick}) => (\n  persons.map(\n    p => <div key={p.name}>{p.name} {p.number} \n        <button onClick={() => handleClick(p.id, p.name)}>poista</button></div>)\n)\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className='notification'>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('Edit to add a new person...')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const personsToShow = filter === ''\n    ? persons\n    : persons.filter(p => p.name.toLowerCase().includes(filter))\n    //filter is always lowercase, handleFormFilterChange lowercases all filters\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if (newPerson.name === '' || newPerson.number === '') {\n      alert('Täytäthän molemmat kentät')\n      return\n    }\n    \n    const existingPerson = persons.find(p => p.name === newPerson.name)\n    //if (persons.map(p => p.name).includes(newPerson.name)) {\n    if (existingPerson !== undefined) {\n      if (window.confirm(`${newPerson.name} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        const updatedPerson = {...existingPerson, number: newPerson.number}\n        personService\n          .update(existingPerson.id, updatedPerson)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== returnedPerson.id\n                                            ? p : returnedPerson))\n            setNewName('')\n            setNewNumber('')\n            showNotification(`Päivitettiin ${returnedPerson.name} tietoja`)\n          })\n          .catch(error => {\n            showErrorMessage(`Tapahtui virhe, ${existingPerson.name} ei voitu päivittää`)\n            setPersons(persons.filter(p => p.id !== existingPerson.id))\n          })\n      }\n    } else {\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          showNotification(`Lisättiin ${returnedPerson.name} luetteloon`)\n        })\n        .catch(error => {\n          showErrorMessage(`Tapahtui virhe, ${newPerson.name} ei lisätty`)\n        })\n    }\n  }\n  \n  const deletePerson = (id, name) => {\n    //console.log('deletePersonfunktio', id)\n    if (!window.confirm(`Poistetaanko ${name}`)) {\n      return\n    }\n    \n    personService\n      .remove(id)\n      .then(returneddata => {\n        //console.log('delete', returneddata)\n        setPersons(persons.filter(p => p.id !== id))\n        showNotification(`Poistettiin ${name} luettelosta`)\n      })\n      .catch(error => {\n        showErrorMessage(`Tapahtu virhe, ${name} ei voitu poistaa`)\n        setPersons(persons.filter(p => p.id !== id))\n      })\n  }\n\n  const showNotification = message => {\n    setNotificationMessage(message)\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n  }\n\n  const showErrorMessage = message => {\n    setErrorMessage(message)\n    setTimeout(() => {\n      setErrorMessage(null)\n    }, 5000)\n  }\n\n  const handleFormNameChange = (event) => (setNewName(event.target.value))\n  const handleFormNumberChange = (event) => (setNewNumber(event.target.value))\n  const handleFormFilterChange = (event) => (setFilter(event.target.value.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Puhelinluettelo</h2>\n      <ErrorNotification message={errorMessage} />\n      <Notification message={notificationMessage} />\n      <Filter filter={filter} handlerer={handleFormFilterChange} />\n      <h3>Lisää uusi</h3>\n      <PersonForm addPerson={addPerson}\n                  newName={newName}\n                  nameHandlerer={handleFormNameChange}\n                  newNumber={newNumber}\n                  numberHandlerer={handleFormNumberChange} />\n      <h3>Numerot</h3>\n      <Persons persons={personsToShow} handleClick={deletePerson} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}